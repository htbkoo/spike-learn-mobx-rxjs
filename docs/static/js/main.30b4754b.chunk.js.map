{"version":3,"sources":["todo/constants.ts","todo/PlainReactHookTodoApp.tsx","utils/IdGenerator.ts","utils/StyledRouterLink.tsx","utils/LinksMenuList.tsx","todo/TodoListApp.tsx","ClippedResponsiveDrawer.tsx","AppNavigationBar.tsx","minesweeper/utils.ts","minesweeper/reactHooks/GameConfigDialog.tsx","minesweeper/reactHooks/BoardComponent.tsx","minesweeper/reactHooks/PlainReactHookMinesweeperApp.tsx","minesweeper/MinesweeperApp.tsx","App.tsx","serviceWorker.ts","index.tsx","muiThemeFactory.ts"],"names":["TEST_IDS","useStyles","makeStyles","theme","createStyles","todoListApp","minWidth","height","padding","spacing","display","flexDirection","todoItemsContainer","margin","overflowY","flex","appContainer","palette","background","default","primary","main","appLink","todoItemContainer","flexOne","idGenerator","startFrom","generateId","lastId","getNextId","next","value","createIncrementalNumberIdGenerator","NO_ERROR","message","isError","TodoItems","items","onCheckBoxToggle","onTextChange","onRemoveButtonClick","map","item","TodoItem","key","id","data","text","isDone","classes","className","Checkbox","checked","onChange","FullWidthTodoItemTextField","role","TODO_ITEM_TEXT_FIELD","testId","label","event","target","disabled","IconButton","color","aria-label","component","onClick","RemoveCircle","AddTodoItem","setText","onAddButtonClick","ADD_TODO_ITEM_TEXT_FIELD","ADD_TODO_ITEM_BUTTON","AddCircle","props","TextField","variant","inputProps","TodoListApp","useState","addTodoText","ids","error","todoAppState","setTodoAppState","Paper","Typography","noValidate","autoComplete","onSubmit","preventDefault","produce","nextState","filter","existingId","draftState","push","Snackbar","ERROR_SNACKBAR","open","autoHideDuration","onClose","closeErrorSnackbar","Alert","elevation","severity","ListItemLink","icon","to","renderLink","useMemo","React","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","LinksMenuList","List","URL_PATHS","TodoListAppMenu","match","useRouteMatch","url","exact","path","PlainReactHookTodoApp","root","appBar","zIndex","modal","drawer","breakpoints","up","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","menuButton","marginRight","toolbar","mixins","ClippedResponsiveDrawer","title","drawerContent","children","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Toolbar","CssBaseline","AppBar","position","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","subSection","light","AppNavigationBar","Divider","toSubSectionMenu","subSectionMenu","getBombsList","dimension","clicked","takeCount","candidates","take","shuffle","shuffleAndTakeList","row","col","flatten","range","i","j","buildBombCandidatesList","blankBoardData","_","count","isBomb","isOpen","FOUR_WAYS_NEIGHBOURS","EIGHT_WAYS_NEIGHBOURS","findValidNeighbours","directions","drow","dcol","coordinates","exactRow","exactCol","isColValid","isCoordinatesValid","getDimension","boardData","length","getNextGameState","prevState","newState","isInitialized","oldBoard","numBomb","bombCandidates","newBoard","forEach","addCount","initializedBoardData","config","board","clickedCell","visited","queue","top","shift","origin","keepIfNotOpened","keepUnvisited","addToQueue","flood","getNextBoard","status","numCellsToOpen","sumBy","rowData","c","countNumCellsOpened","winAfterClick","GameStatus","WIN","LOSE","PLAYING","getNextStatus","DialogTextField","setValue","otherProps","type","fullWidth","GameConfigDialog","onStartGame","setConfig","dialogTextFields","Object","keys","field","setFormField","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","newConfig","boardContainer","cellButtonContainer","cellButton","getButtonText","BoardComponent","isPlaying","handleClick","cellData","gameAppContainer","borderRadius","backgroundColor","getTitle","PlainReactHookMinesweeperApp","state","setState","game","checkIsPlaying","gameBoardIfGameStarted","shouldShowDialog","createNewGameState","MinesweeperAppMenu","MinesweeperApp","APP_CONFIGURATIONS","linkText","appComponent","isPathExact","toNavigationItem","toRoute","pathname","startIndex","indexOf","endIndex","pathFirstPart","substring","matchedConfig","find","App","Boolean","window","location","hostname","myMuiTheme","createMuiTheme","responsiveFontSizes","createMyMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6MAAYA,E,uNAAAA,K,gDAAAA,E,yCAAAA,E,yCAAAA,E,gCAAAA,M,KCgBZ,IAAMC,EAAYC,KAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,YAAa,CACT,UAAa,SACbC,SAAU,MACVC,OAAQ,OACRC,QAASL,EAAMM,QAAQ,GACvBC,QAAS,OACTC,cAAe,UAEnBC,mBAAoB,CAChBC,OAAQV,EAAMM,QAAQ,GACtBK,UAAW,OACXC,KAAM,GAEVC,aAAc,CACV,gBAAmBb,EAAMc,QAAQC,WAAWC,QAC5C,UAAa,QACb,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,SAAY,qBACZ,MAAShB,EAAMc,QAAQG,QAAQC,MAEnCC,QAAS,CACL,MAAS,WAEbC,kBAAmB,CACfb,QAAS,OACTF,QAASL,EAAMM,QAAQ,IAE3Be,QAAS,CACLT,KAAM,QA2BZU,ECxEC,WAAiF,IAArCC,EAAoC,uDAAxB,EACrDD,EAAc,UAAC,SAAUE,IAAV,uEACbC,EAASF,EADI,OAGb,OAHa,SAGPE,IAHO,0DAAUD,KAAX,GAOpB,MAAO,CACHE,UADG,WAEC,OAAOJ,EAAYK,OAAOC,QD8DlBC,CAAmC,GAGjDC,EAAW,CAACC,QAAS,GAAIC,SAAS,GAsFxC,SAASC,EAAT,GAGG,IAFEC,EAEH,EAFGA,MAAOC,EAEV,EAFUA,iBAAkBC,EAE5B,EAF4BA,aAAcC,EAE1C,EAF0CA,oBAGxC,OACI,oCAEQH,EAAMI,KAAI,SAAAC,GAAI,OACV,kBAACC,EAAD,CACIC,IAAKF,EAAKG,GACVC,KAAMJ,EACNJ,iBAAkB,kBAAMA,EAAiBI,EAAKG,KAC9CN,aAAc,SAAAQ,GAAI,OAAIR,EAAaG,EAAKG,GAAIE,IAC5CP,oBAAqB,kBAAMA,EAAoBE,EAAKG,WAQ5E,SAASF,EAAT,GAAiO,IAAD,IAA7MG,KAAOC,EAAsM,EAAtMA,KAAMC,EAAgM,EAAhMA,OAAQH,EAAwL,EAAxLA,GAAKP,EAAmL,EAAnLA,iBAAkBC,EAAiK,EAAjKA,aAAcC,EAAmJ,EAAnJA,oBACnES,EAAUhD,IAEhB,OACI,yBAAKiD,UAAWD,EAAQ1B,mBACpB,kBAAC4B,EAAA,EAAD,CAAUC,QAASJ,EAAQK,SAAUf,IACrC,kBAACgB,EAAD,CACIC,KAAMvD,EAASwD,qBACfC,OAAM,UAAKzD,EAASwD,qBAAd,YAAsCX,GAE5Ca,MAAK,4BAAuBb,GAC5Bd,MAAOgB,EACPM,SAAU,SAAAM,GAAK,OAAIpB,EAAaoB,EAAMC,OAAO7B,QAC7C8B,SAAUb,IAEd,kBAACc,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,mBAAmBC,UAAU,OACxDC,QAAS1B,GAEjB,kBAAC2B,EAAA,EAAD,QAMhB,SAASC,EAAT,GAGG,IAFErB,EAEH,EAFGA,KAAMsB,EAET,EAFSA,QAASC,EAElB,EAFkBA,iBAGVrB,EAAUhD,IAEhB,OACI,yBAAKiD,UAAWD,EAAQ1B,mBACpB,kBAAC+B,EAAD,CACIC,KAAMvD,EAASuE,yBAEfb,MAAM,gBACN3B,MAAOgB,EACPM,SAAU,SAAAM,GAAK,OAAIU,EAAQV,EAAMC,OAAO7B,UAE5C,kBAAC+B,EAAA,EAAD,CAAYP,KAAMvD,EAASwE,qBAAsBR,aAAYhE,EAASwE,qBAC1DT,MAAM,UACNE,UAAU,OACVC,QAASI,GACjB,kBAACG,EAAA,EAAD,QAMhB,SAASnB,EAAT,GAAoJ,IAA/GG,EAA8G,EAA9GA,OAAWiB,EAAmG,0BACzIzB,EAAUhD,IAEhB,OACI,kBAAC0E,EAAA,EAAD,iBACQD,EADR,CAEIE,QAAQ,WACR1B,UAAWD,EAAQzB,QACnBqD,WAAY,CAAC,cAAepB,GAAUiB,EAAMnB,SAKzCuB,MAvKf,WACI,IAAM7B,EAAUhD,IADG,EAEqB8E,mBAA2B,CAC/DjC,KAAM,CAACkC,YANQ,GAMqB3C,MAAO,CAAC4C,IAAK,KACjDC,MAAOjD,IAJQ,mBAEZkD,EAFY,KAEEC,EAFF,KAObJ,EAAcG,EAAarC,KAAKkC,YACtC,OACI,kBAACK,EAAA,EAAD,CAAOnC,UAAWD,EAAQ5C,aACtB,kBAACiF,EAAA,EAAD,CAAYV,QAAQ,MAApB,qBACA,0BAAM1B,UAAWD,EAAQrC,mBAAoB2E,YAAU,EAACC,aAAa,MAC/DC,SAAU,SAAA9B,GAAK,OAAIA,EAAM+B,mBAC3B,kBAACtD,EAAD,CACIC,MAAO8C,EAAarC,KAAKT,MAAM4C,IAAIxC,KAAI,SAAAI,GAAE,OAAIsC,EAAatC,MAC1DP,iBAAkB,SAAAO,GAAE,OAChBuC,EAAgBO,YAAQR,GAAc,SAAAS,GAClCA,EAAU/C,GAAIG,QAAU4C,EAAU/C,GAAIG,YAG9CT,aAAc,SAACM,EAAIE,GAAL,OACVqC,EAAgBO,YAAQR,GAAc,SAAAS,GAClCA,EAAU/C,GAAIE,KAAOA,OAG7BP,oBAAqB,SAAAK,GAAE,OACnBuC,EAAgBO,YAAQR,GAAc,SAAAS,GAClCA,EAAU9C,KAAKT,MAAM4C,IAAMW,EAAU9C,KAAKT,MAAM4C,IAAIY,QAAO,SAAAC,GAAU,OAAIA,IAAejD,YACjF+C,EAAU/C,UAI7B,kBAACuB,EAAD,CAAarB,KAAMiC,EAAaX,QAuC5C,SAAwBtB,GACpBqC,EAAgBO,YAAQR,GAAc,SAAAY,GAClCA,EAAWjD,KAAKkC,YAAcjC,OAzC+BuB,iBAgBrE,WACQU,EACAI,EAAgBO,YAAQR,GAAc,SAAAY,GAClC,IAAMlD,EAAKpB,EAAYI,YACvBkE,EAAWjD,KAAKT,MAAM4C,IAAIe,KAAKnD,GAC/BkD,EAAWlD,GAAM,CACbE,KAAMiC,EACNhC,QAAQ,EACRH,MAEJkD,EAAWjD,KAAKkC,YA7DT,QAoEQ9C,EAJD,8BAKtBkD,EAAgBO,YAAQR,GAAc,SAAAY,GAClCA,EAAWb,MAAQ,CAAC/C,SAAS,EAAMD,gBAF3C,IAA2BA,MA/BnB,kBAAC+D,EAAA,EAAD,CAAU1C,KAAMvD,EAASkG,eAAgBC,KAAMhB,EAAaD,MAAM/C,QAASiE,iBAAkB,IAAMC,QAASC,GACxG,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG5B,QAAQ,SAASyB,QAASC,EAAoBG,SAAS,SACvEtB,EAAaD,MAAMhD,WAMpC,SAASoE,IACLlB,EAAgBO,YAAQR,GAAc,SAAAY,GAClCA,EAAWb,MAAM/C,SAAU,Q,6CEnGhC,SAASuE,EAAahC,GAA2B,IAC7CiC,EAAqBjC,EAArBiC,KAAMvF,EAAesD,EAAftD,QAASwF,EAAMlC,EAANkC,GAEhBC,EAAaC,mBACf,kBACIC,IAAMC,YAA6C,SAACC,EAAWC,GAAZ,OAC/C,kBAAC,IAAD,eAAYN,GAAIA,EAAIM,IAAKA,GAASD,SAE1C,CAACL,IAGL,OACI,4BACI,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACnD,UAAW4C,GACvBF,EAAO,kBAACU,EAAA,EAAD,KAAeV,GAAuB,KAC9C,kBAACW,EAAA,EAAD,CAAclG,QAASA,MCpCxB,SAASmG,EAAT,GAAiE,IAAzClF,EAAwC,EAAxCA,MACnC,OACI,kBAACmF,EAAA,EAAD,KACKnF,EAAMI,KAAI,SAACC,GAAD,OACP,kBAACgE,EAAD,iBAAkBhE,EAAlB,CAAwBE,IAAKF,EAAKkE,UCHlD,IAAMa,EACW,cAGjB,SAASC,IACL,IAAMC,EAAQC,cAEd,OACI,6BACI,kBAACL,EAAD,CACIlF,MAAO,CACH,CAACuE,GAAG,GAAD,OAAKe,EAAME,IAAX,YAAkBJ,GAAyBrG,QAAS,wBAO3E,SAAS0D,IACL,IAAM6C,EAAQC,cAEd,OACI,6BAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAMJ,EAAMI,MACrB,iEAEJ,kBAAC,IAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,YAAmBN,IAC1B,kBAACO,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,KACR,iC,yGCxBd9H,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT6H,KAAM,CACFvH,QAAS,QAEbwH,OAAQ,CACJC,OAAQhI,EAAMgI,OAAOC,MAAQ,GAEjCC,OAAO,eACFlI,EAAMmI,YAAYC,GAAG,MAAQ,CAC1BC,MAZI,IAaJC,WAAY,IAIpBC,YAAa,CACTF,MAlBQ,KAoBZG,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVtI,QAASL,EAAMM,QAAQ,GACvBmI,SAAU,QAGdG,WAAW,aACPC,YAAa7I,EAAMM,QAAQ,IAC1BN,EAAMmI,YAAYC,GAAG,MAAQ,CAC1B7H,QAAS,SAIjBuI,QAAS9I,EAAM+I,OAAOD,aAIf,SAASE,GAAT,GAGZ,IAFEC,EAEH,EAFGA,MAAOC,EAEV,EAFUA,cAAeC,EAEzB,EAFyBA,SAGjBrG,EAAUhD,KAEVE,EAAQoJ,OAHhB,EAIsCxC,IAAMhC,UAAS,GAJrD,mBAISyE,EAJT,KAIqBC,EAJrB,KAMQC,EAAqB,WACvBD,GAAeD,IAGbnB,EACF,6BACI,kBAACsB,EAAA,EAAD,MACCN,GAIT,OACI,yBAAKnG,UAAWD,EAAQgF,MACpB,kBAAC2B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQ5G,UAAWD,EAAQiF,QACxC,kBAACyB,EAAA,EAAD,KACI,kBAAC7F,EAAA,EAAD,CACIC,MAAM,UACNC,aAAW,cACX+F,KAAK,QACL7F,QAASwF,EACTxG,UAAWD,EAAQ8F,YAEnB,kBAAC,IAAD,OAEJ,kBAACzD,EAAA,EAAD,CAAYV,QAAQ,KAAKoF,QAAM,GAC1BZ,KAKb,yBAAKlG,UAAWD,EAAQoF,OAAQrE,aAAW,mBAEvC,kBAACiG,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACC,EAAA,EAAD,CACIxF,QAAQ,YACRyF,OAA4B,QAApBlK,EAAMmK,UAAsB,QAAU,OAC9CnE,KAAMqD,EACNnD,QAASqD,EACTzG,QAAS,CACLsH,MAAOtH,EAAQyF,aAEnB8B,WAAY,CACRC,aAAa,IAGhBpC,IAGT,kBAAC4B,EAAA,EAAD,CAAQS,QAAM,EAACP,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACInH,QAAS,CACLsH,MAAOtH,EAAQyF,aAEnB9D,QAAQ,YACRuB,MAAI,GAEHkC,KAKb,0BAAMnF,UAAWD,EAAQ4F,SACrB,kBAACc,EAAA,EAAD,MACCL,I,cCpHXrJ,GAAYC,KAAW,SAACC,GAAD,OACzBC,YAAa,CACTuK,WAAY,CACR5G,MAAO5D,EAAMc,QAAQG,QAAQwJ,OAEjCjC,gBAAiB,CACbC,SAAU,aASP,SAASiC,GAAT,GAAwE,IAA7CxI,EAA4C,EAA5CA,MAChCY,EAAUhD,KAEhB,OACI,yBAAKiD,UAAWD,EAAQ0F,iBACpB,6BACI,kBAACpB,EAAD,CAAelF,MAAOA,IAEtB,kBAACyI,GAAA,EAAD,MAEA,yBAAK5H,UAAWD,EAAQ0H,YACpB,kBAAC,IAAD,KACKtI,EAAMI,IAAIsI,IACX,kBAAC,IAAD,CAAOhD,KAAK,KACR,mCAS5B,SAASgD,GAAT,GAAwE,IAA7CnE,EAA4C,EAA5CA,GAAIoE,EAAwC,EAAxCA,eAC3B,OAAIA,EAEI,kBAAC,IAAD,CAAOjD,KAAMnB,EAAIhE,IAAKgE,GACjBoE,GAIF,G,aC5BR,SAASC,GAAT,GAA2J,IAApIC,EAAmI,EAAnIA,UAAWC,EAAwH,EAAxHA,QAASC,EAA+G,EAA/GA,UAE9C,OANG,YAAuI,IAA1GC,EAAyG,EAAzGA,WAAYD,EAA6F,EAA7FA,UAC5C,OAAOE,gBAAKC,mBAAQF,GAAaD,GAK1BI,CAAmB,CAACH,WApBxB,YAEmB,IAAD,IADpBH,UAAY1C,EACQ,EADRA,MAAOjI,EACC,EADDA,OACC,IADQ4K,QAAUM,EAClB,EADkBA,IAAKC,EACvB,EADuBA,IAU5C,OAP6CC,mBACzCC,iBAAMrL,GAAQkC,KAAI,SAAAoJ,GAAC,OACfD,iBAAMpD,GAAO/F,KAAI,SAAAqJ,GAAC,MACd,CAACD,EAAGC,UAIOjG,QAAO,mCAAEgG,EAAF,KAAKC,EAAL,YAAaD,IAAMJ,GAASK,IAAMJ,KAQ7CK,CAAwB,CAACb,YAAWC,YAChBC,cAGpC,SAASY,GAAT,GAAqE,IAA5CxD,EAA2C,EAA3CA,MAAOjI,EAAoC,EAApCA,OACnC,OAAOqL,iBAAMrL,GAAQkC,KAAI,SAAAwJ,GAAC,OACtBL,iBAAMpD,GAAO/F,KAAI,SAAAwJ,GAAC,MAAK,CACnBC,MAAO,EACPC,QAAQ,EACRC,QAAQ,SAKpB,IAAMC,GAA8C,CAChD,EAAE,EAAG,GACL,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAGFC,GAA4C,UAC3CD,GAD2C,CAE9C,EAAE,GAAI,GACN,EAAE,EAAG,GACL,CAAC,GAAI,GACL,CAAC,EAAG,KA6BR,SAASE,GAAoBC,EAA7B,EAA+FtB,GAAmD,IAAD,mBAAhFO,EAAgF,KAA3EC,EAA2E,KAC7I,OAAOc,EACF/J,KAGL,YAA8D,IAAD,mBAAhCgK,EAAgC,KAA1BC,EAA0B,KACzD,MAAO,CAACjB,EAAMgB,EAAMf,EAAMgB,MAHzB7G,QAML,SAA8B8G,GAC1B,OAID,YAGK,IAAD,gBAFNA,YAEM,GAFQC,EAER,KAFkBC,EAElB,SAF6B3B,UAAY1C,EAEzC,EAFyCA,MAAOjI,EAEhD,EAFgDA,OAIjDuM,EAAcD,GAAY,GAAOA,EAAWrE,EAElD,OAHoBoE,GAAY,GAAOA,EAAWrM,GAG7BuM,EAXVC,CAAmB,CAACJ,cAAazB,iBAchD,SAAS8B,GAAaC,GAGlB,MAAO,CACHzE,MAFayE,EAAU,GAEPC,OAChB3M,OAAQ0M,EAAUC,QAQnB,SAASC,GAAiBC,EAAsBjC,GACnD,OAAOxF,YAAQyH,GAAW,SAAAC,GACtB,IAAMJ,EAAYG,EAAUE,cACtBF,EAAUH,UAlEjB,YAEO,IADTM,EACQ,EADRA,SAAUpC,EACF,EADEA,QAASqC,EACX,EADWA,QAEdtC,EAA4B8B,GAAaO,GAEzCE,EAAiBxC,GAAa,CAACG,UAAWoC,EAAStC,YAAWC,YAEpE,OAAOxF,YAAQ4H,GAAU,SAAAG,GACrBD,EAAeE,SAAQ,YAAiB,IAAD,mBAAdlC,EAAc,KAATC,EAAS,KAUnC,SAASkC,EAAT,GAAyC,IAAD,mBAArBhB,EAAqB,KAAXC,EAAW,KACpCa,EAASd,GAAUC,GAAUX,QAVjCwB,EAASjC,GAAKC,GAAKS,QAAS,EAKxBI,GAAoBD,GAAuB,CAACb,EAAKC,GAAMR,GAClDyC,QAAQC,SAoDfC,CAAqB,CACnBN,SAAUH,EAAUH,UACpBO,QAASJ,EAAUU,OAAON,QAC1BrC,YAGRkC,EAASC,eAAgB,EACzBD,EAASJ,UAKV,SAAsBc,EAAtB,GAAiF,IAAxCtC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,IACjD,OAAO/F,YAAQoI,GAAO,SAAAL,GAClB,IAAMM,EAAcN,EAASjC,GAAKC,GAClCsC,EAAY5B,QAAS,EAChB4B,EAAY7B,QAIjB,WACI,IAAMjB,EAAY8B,GAAae,GACzBE,EAAuBrC,iBAAMV,EAAU3K,QAAQkC,KAAI,SAAAwJ,GAAC,OAAIL,iBAAMV,EAAU1C,OAAO/F,KAAI,SAAAwJ,GAAC,OAAI,QACxFiC,EAA+B3B,GAAoBF,GAAsB,CAACZ,EAAKC,GAAMR,GAE3F,KAAOgD,EAAMhB,OAAS,GAAG,CACrB,IAAMiB,EAAyBD,EAAME,QAC/BC,EAASX,EAASS,EAAI,IAAIA,EAAI,IAC/BE,EAAOlC,SACRkC,EAAOjC,QAAS,EAEK,IAAjBiC,EAAOnC,OACPK,GAAoBF,GAAsB8B,EAAKjD,GAC1CrF,OAAOyI,GACPzI,OAAO0I,GACPZ,QAAQa,IAKzB,SAASF,EAAT,GAAsC,IAAD,mBAAX7C,EAAW,KAANC,EAAM,KACjC,OAAQgC,EAASjC,GAAKC,GAAKU,OAG/B,SAASmC,EAAT,GAAoC,IAAD,mBAAX9C,EAAW,KAANC,EAAM,KAC/B,OAAQuC,EAAQxC,GAAKC,GAGzB,SAAS8C,EAAT,GAAiC,IAAD,mBAAX/C,EAAW,KAANC,EAAM,KAC5BuC,EAAQxC,GAAKC,IAAO,EACpBwC,EAAMlI,KAAK,CAACyF,EAAKC,KAjCrB+C,MAViBC,CAAazB,EAAW9B,GAC7CkC,EAASsB,OAoDV,SAAuBZ,EAAvB,KAAyH,IAA/EtC,EAA8E,EAA9EA,IAAKC,EAAyE,EAAzEA,IAAwBlD,EAAiD,EAAjDA,MAAOjI,EAA0C,EAA1CA,OAAQiN,EAAkC,EAAlCA,QACzF,OAQA,WACI,IACMoB,EADgBpG,EAAQjI,EACSiN,EAGvC,OAlBD,SAA6BO,GAChC,OAAOc,iBAAMd,GAAO,SAAAe,GAAO,OAAID,iBAAMC,GAAS,SAAAC,GAAC,OAAIA,EAAE3C,OAAS,EAAI,QAgBvC4C,CAAoBjB,KACjBa,EAb1BK,GACOC,GAAWC,IAgBXpB,EAAMtC,GAAKC,GAAKS,OAdhB+C,GAAWE,KAEXF,GAAWG,QA1DAC,CAAcjC,EAASJ,UAAW9B,EAASiC,EAAUU,W,gECtE/E,SAASyB,GAAT,GAAqI,IAAxGxN,EAAuG,EAAvGA,MAAOyN,EAAgG,EAAhGA,SAAaC,EAAmF,oCAChI,OACI,kBAAC9K,EAAA,EAAD,eACIC,QAAQ,WACR/D,OAAO,QACPkB,MAAOA,EACPsB,SAAU,SAAAM,GAAK,OAAI6L,EAAS7L,EAAMC,OAAO7B,QACzC2N,KAAK,SACLC,WAAS,GACLF,IAKDG,OAhEf,YAAwI,IAA7GxD,EAA4G,EAA5GA,OAAQhD,EAAoG,EAApGA,MAAOyG,EAA6F,EAA7FA,YAA6F,EACvG9K,mBAAqB,CAC7CyD,MAAO,GACPjI,OAAQ,EACRiN,QAAS,KAJsH,mBAC5HM,EAD4H,KACpHgC,EADoH,KAQ7HC,EAAmBC,OACpBC,KAAKnC,GACLrL,KAAI,SAAAyN,GAAK,OACN,kBAACX,GAAD,CACI3M,IAAKsN,EACLrN,GAAIqN,EACJxM,MAAOwM,EACPnO,MAAO+L,EAAOoC,GACdV,SAAUW,EAAaD,QAInC,OACI,kBAACE,GAAA,EAAD,CAAQjK,KAAMiG,EAAQiE,kBAAgB,qBAClC,kBAACC,GAAA,EAAD,CAAazN,GAAG,qBAAqBuG,GAErC,kBAACmH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,mCAECT,GAGL,kBAACU,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQxM,QAAS,kBAAM2L,EAAY/B,IAAS/J,MAAM,WAAlD,gBAOZ,SAASoM,EAAaD,GAClB,OAAO,SAAAnO,GAAK,OAAI+N,EAAUnK,YAAQmI,GAAQ,SAAA6C,GACtCA,EAAUT,GAASnO,SC7CzB9B,GAAYC,KAAW,SAACC,GAAD,OACzBC,YAAa,CACTwQ,eAAgB,CACZlQ,QAAS,QACT8H,MAAO,eAEXqI,oBAAqB,CACjBhQ,OAAQV,EAAMM,QAAQ,KACtBC,QAAS,gBAEboQ,WAAY,CACRvQ,OAAQJ,EAAMM,QAAQ,GACtB+H,MAAOrI,EAAMM,QAAQ,GACrBH,SAAU,cAsCtB,SAASyQ,GAAT,GAA4E,IAApD3E,EAAmD,EAAnDA,OAAQD,EAA2C,EAA3CA,OAAQD,EAAmC,EAAnCA,MACpC,OAAIE,EACOD,EAAS,IAAgB,IAAVD,EAAcA,EAAQ,GAErC,GAIA8E,ICrCH9B,GDqCG8B,GAzCf,YAGG,IAFElO,EAEH,EAFGA,KAAMmO,EAET,EAFSA,UAAWC,EAEpB,EAFoBA,YAGZjO,EAAUhD,KAEhB,OACI,yBAAKiD,UAAWD,EAAQ2N,gBACnB9N,EAAKL,KAAI,SAACqM,EAASrD,GAAV,OACN,yBAAK7I,IAAG,cAAS6I,IAETqD,EAAQrM,KAAI,SAAC0O,EAAUzF,GAAX,OACR,yBACI9I,IAAG,eAAU6I,EAAMqD,EAAQ5B,OAASxB,GACpCxI,UAAWD,EAAQ4N,qBAEnB,kBAACH,GAAA,EAAD,CACI9L,QAAQ,YACRb,MAAM,UACNb,UAAWD,EAAQ6N,WACnBxH,SAAUyH,GAAcI,GACxBtN,SAAUsN,EAAS/E,SAAW6E,EAC9B/M,QAAS,kBAAMgN,EAAY,CAACzF,MAAKC,qBCrC/DzL,GAAYC,KAAW,SAACC,GAAD,OACzBC,YAAa,CACTgR,iBAAkB,CACd,UAAa,OACb,QAAW,OACX,QAAWjR,EAAMM,QAAQ,GACzB,SAAY,OACZ,eAAkB,SAClB,WAAc,SACd,MAAS,cACT,OAAU,cACV4Q,aAAclR,EAAMM,QAAQ,GAC5B6Q,gBAAiBnR,EAAMc,QAAQC,WAAWqJ,YA+DtD,SAASgH,GAAS5C,GACd,GAAIA,EAAQ,CACR,GAAIA,IAAWO,GAAWC,IACtB,MAAO,4BACJ,GAAIR,IAAWO,GAAWE,KAC7B,MAAO,2BAGf,MAAO,kB,SAhECF,K,kBAAAA,E,UAAAA,E,aAAAA,Q,KAoEGsC,OAnDf,WAAyC,IAAD,EAC9BvO,EAAUhD,KADoB,EAGV8E,mBAAmB,IAHT,mBAG7B0M,EAH6B,KAGtBC,EAHsB,KAK9BT,EHiEH,SAAwBQ,GAC3B,QAASA,EAAME,MAAQzC,GAAWG,UAAYoC,EAAME,KAAKhD,OGlEvCiD,CAAeH,GAC3BI,EAAyBJ,EAAME,KAE7B,kBAAC,GAAD,CACI7O,KAAM2O,EAAME,KAAK1E,UACjBgE,UAAWA,EACXC,YAmBZ,SAAqBvE,GACjB+E,EAAS/L,YAAQ8L,GAAO,SAAApE,GAChBoE,EAAME,OACNtE,EAASsE,KAAOxE,GAAiBsE,EAAME,KAAMhF,WAnBnD,GAEAmF,GAAoBL,EAAME,OAASV,EACzC,OACI,yBAAK/N,UAAWD,EAAQmO,kBACnBS,EACD,kBAAC,GAAD,CAAkBzF,OAAQ0F,EAAkB1I,MAAOmI,GAAQ,UAACE,EAAME,YAAP,aAAC,EAAYhD,QAASkB,YAIzF,SAAmB/B,GACf4D,EAAS/L,YAAQ8L,GAAO,SAAApE,GACpBA,EAASsE,KHsId,SAA4B7D,GAC/B,MAAO,CACHa,OAAQO,GAAWG,QACnB/B,eAAe,EACfL,UAAWjB,GAAe8B,GAC1BA,UG3IoBiE,CAAmBjE,YClEzCrG,GACW,cAGjB,SAASuK,KACL,IAAMrK,EAAQC,cAEd,OACI,6BACI,kBAACL,EAAD,CACIlF,MAAO,CACH,CAACuE,GAAG,GAAD,OAAKe,EAAME,IAAX,YAAkBJ,IAAyBrG,QAAS,wBAO3E,SAAS6Q,KACL,IAAMtK,EAAQC,cAGd,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAMJ,EAAMI,MACrB,iEAEJ,kBAAC,IAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,YAAmBN,KAC1B,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOM,KAAK,KACR,gCC1BhB,IAAM9H,GAAYC,KAAW,SAACC,GAAD,OACzBC,YAAa,CACTY,aAAc,QAahBkR,GAAyC,CAC3C,CACInK,KAAM,IACNoK,SAAU,OACVC,aAAe,qDACfC,aAAa,EACbjJ,MAAO,yBAEX,CACIrB,KAAM,YACNoK,SAAU,UACVC,aAAe,kBAAC,EAAD,MACfpH,eAAiB,kBAACtD,EAAD,MACjB0B,MAAO,YAEX,CACIrB,KAAM,mBACNoK,SAAU,iBACVC,aAAe,kBAACH,GAAD,MACfjH,eAAiB,kBAACgH,GAAD,MACjB5I,MAAO,oBA0Bf,SAASkJ,GAAT,GACI,MAAO,CACH1L,GAF6F,EAA1EmB,KAGnB3G,QAH6F,EAApE+Q,SAIzBnH,eAJ6F,EAA1DA,gBAQ3C,SAASuH,GAAT,GAAuE,IAArDH,EAAoD,EAApDA,aAAcrK,EAAsC,EAAtCA,KAAMsK,EAAgC,EAAhCA,YAClC,OACI,kBAAC,IAAD,CAAOvK,MAAOuK,EAAatK,KAAMA,EAAMnF,IAAKmF,GACvCqK,GAMb,SAASb,GAASiB,GAA2B,IAAD,EAClCC,EAAaD,EAASE,QAAQ,KAC9BC,EAAWH,EAASE,QAAQ,IAAKD,EAAa,GAC9CG,EAAgBJ,EAASK,UAAUJ,GAA0B,IAAdE,EAAkBA,EAAWH,EAAStF,QAErF4F,EAAgBZ,GAAmBa,MAAK,qBAAEhL,OAAmB6K,KAEnE,wBAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAe1J,aAAtB,QAA+B,GAGpB4J,OAjDO,WAClB,IAAM/P,EAAUhD,KACV0H,EAAQC,cAEd,OACI,yBAAK1E,UAAWD,EAAQjC,cACpB,kBAACmI,GAAD,CACIC,MAAK,UAAKmI,GAAS5J,EAAME,MACzBwB,cAAe,kBAACwB,GAAD,CAAkBxI,MAAO6P,GAAmBzP,IAAI6P,OAG/D,kBAAC,IAAD,KACKJ,GAAmBzP,IAAI8P,IACxB,kBAAC,IAAD,CAAOxK,KAAK,KACR,mCCpDJkL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzL,MACvB,2D,wDCPA0L,GCRC,WACH,IAAMlT,EAAQmT,KAAe,CACzBrS,QAAS,CACLyO,KAAM,OACNtO,QAAS,CAACC,KAAM,cAIxB,OAAOkS,KAAoBpT,GDAZqT,GAEnBC,IAASC,OACL,kBAACC,EAAA,EAAD,CAAexT,MAAOkT,IAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOtL,KAAK,KACR,kBAAC,GAAD,UAKjB6L,SAASC,eAAe,SDkHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.30b4754b.chunk.js","sourcesContent":["export enum TEST_IDS {\n    ADD_TODO_ITEM_TEXT_FIELD = \"addTodoItemTextField\",\n    ADD_TODO_ITEM_BUTTON = \"addTodoItemButton\",\n\n    TODO_ITEM_TEXT_FIELD = \"todoItemTextField\",\n\n    ERROR_SNACKBAR = \"errorSnackbar\",\n}","import React, {useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport produce from \"immer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {AddCircle, RemoveCircle} from \"@material-ui/icons\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport {createIncrementalNumberIdGenerator} from \"../utils/IdGenerator\";\nimport {TEST_IDS} from \"./constants\";\nimport {TextFieldProps} from \"@material-ui/core/TextField/TextField\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        todoListApp: {\n            \"textAlign\": \"center\",\n            minWidth: \"80%\",\n            height: \"80vh\",\n            padding: theme.spacing(2),\n            display: \"flex\",\n            flexDirection: \"column\",\n        },\n        todoItemsContainer: {\n            margin: theme.spacing(1),\n            overflowY: \"auto\",\n            flex: 1,\n        },\n        appContainer: {\n            \"backgroundColor\": theme.palette.background.default,\n            \"minHeight\": \"100vh\",\n            \"display\": \"flex\",\n            \"flexDirection\": \"column\",\n            \"alignItems\": \"center\",\n            \"justifyContent\": \"center\",\n            \"fontSize\": \"calc(10px + 2vmin)\",\n            \"color\": theme.palette.primary.main\n        },\n        appLink: {\n            \"color\": \"#61dafb\"\n        },\n        todoItemContainer: {\n            display: \"flex\",\n            padding: theme.spacing(2),\n        },\n        flexOne: {\n            flex: 1,\n        }\n    }),\n);\n\ntype TodoItemId = number;\n\ninterface TodoItemData {\n    id: TodoItemId,\n    text: string,\n    isDone: boolean,\n}\n\ntype TodoListAppState = {\n    data: {\n        items: {\n            [id: number]: TodoItemData\n            ids: TodoItemId[],\n        },\n        addTodoText: string,\n    },\n    error: {\n        message: string,\n        isError: boolean,\n    }\n};\n\nconst idGenerator = createIncrementalNumberIdGenerator(0); // TODO: replace this by uuid\n\nconst EMPTY_TEXT_WIP = \"\";\nconst NO_ERROR = {message: \"\", isError: false};\n\nfunction TodoListApp() {\n    const classes = useStyles();\n    const [todoAppState, setTodoAppState] = useState<TodoListAppState>({\n        data: {addTodoText: EMPTY_TEXT_WIP, items: {ids: []}},\n        error: NO_ERROR\n    });\n\n    const addTodoText = todoAppState.data.addTodoText;\n    return (\n        <Paper className={classes.todoListApp}>\n            <Typography variant=\"h3\">Simple To Do List</Typography>\n            <form className={classes.todoItemsContainer} noValidate autoComplete=\"off\"\n                  onSubmit={event => event.preventDefault()}>\n                <TodoItems\n                    items={todoAppState.data.items.ids.map(id => todoAppState[id])}\n                    onCheckBoxToggle={id =>\n                        setTodoAppState(produce(todoAppState, nextState => {\n                            nextState[id].isDone = !nextState[id].isDone\n                        }))\n                    }\n                    onTextChange={(id, text) =>\n                        setTodoAppState(produce(todoAppState, nextState => {\n                            nextState[id].text = text\n                        }))\n                    }\n                    onRemoveButtonClick={id =>\n                        setTodoAppState(produce(todoAppState, nextState => {\n                            nextState.data.items.ids = nextState.data.items.ids.filter(existingId => existingId !== id);\n                            delete nextState[id];\n                        }))\n                    }\n                />\n                <AddTodoItem text={addTodoText} setText={setAddTodoText} onAddButtonClick={handleAddTodoItem}/>\n            </form>\n            <Snackbar role={TEST_IDS.ERROR_SNACKBAR} open={todoAppState.error.isError} autoHideDuration={6000} onClose={closeErrorSnackbar}>\n                <Alert elevation={6} variant=\"filled\" onClose={closeErrorSnackbar} severity=\"error\">\n                    {todoAppState.error.message}\n                </Alert>\n            </Snackbar>\n        </Paper>\n    )\n\n    function closeErrorSnackbar() {\n        setTodoAppState(produce(todoAppState, draftState => {\n            draftState.error.isError = false;\n        }));\n    }\n\n    function handleAddTodoItem() {\n        if (addTodoText) {\n            setTodoAppState(produce(todoAppState, draftState => {\n                const id = idGenerator.getNextId();\n                draftState.data.items.ids.push(id);\n                draftState[id] = {\n                    text: addTodoText,\n                    isDone: false,\n                    id\n                };\n                draftState.data.addTodoText = EMPTY_TEXT_WIP;\n            }));\n        } else {\n            showErrorSnackbar(\"To do item cannot be empty!\");\n        }\n    }\n\n    function showErrorSnackbar(message: string) {\n        setTodoAppState(produce(todoAppState, draftState => {\n            draftState.error = {isError: true, message};\n        }));\n    }\n\n    function setAddTodoText(text: string) {\n        setTodoAppState(produce(todoAppState, draftState => {\n            draftState.data.addTodoText = text;\n        }));\n    }\n}\n\ninterface TodoItemsHandlers {\n    onCheckBoxToggle: (id: TodoItemId) => void,\n    onTextChange: (id: TodoItemId, text: string) => void,\n    onRemoveButtonClick: (id: TodoItemId) => void,\n}\n\nfunction TodoItems(\n    {items, onCheckBoxToggle, onTextChange, onRemoveButtonClick}:\n        { items: TodoItemData[], } & TodoItemsHandlers\n) {\n    return (\n        <>\n            {\n                items.map(item => (\n                    <TodoItem\n                        key={item.id}\n                        data={item}\n                        onCheckBoxToggle={() => onCheckBoxToggle(item.id)}\n                        onTextChange={text => onTextChange(item.id, text)}\n                        onRemoveButtonClick={() => onRemoveButtonClick(item.id)}\n                    />\n                ))\n            }\n        </>\n    );\n}\n\nfunction TodoItem({data: {text, isDone, id}, onCheckBoxToggle, onTextChange, onRemoveButtonClick}: { data: TodoItemData, onCheckBoxToggle: () => void, onTextChange: (text: string) => void, onRemoveButtonClick: () => void }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.todoItemContainer}>\n            <Checkbox checked={isDone} onChange={onCheckBoxToggle}/>\n            <FullWidthTodoItemTextField\n                role={TEST_IDS.TODO_ITEM_TEXT_FIELD}\n                testId={`${TEST_IDS.TODO_ITEM_TEXT_FIELD}-${id}`}\n\n                label={`id for debugging: ${id}`}\n                value={text}\n                onChange={event => onTextChange(event.target.value)}\n                disabled={isDone}\n            />\n            <IconButton color=\"primary\" aria-label=\"remove todo item\" component=\"span\"\n                        onClick={onRemoveButtonClick}\n            >\n                <RemoveCircle/>\n            </IconButton>\n        </div>\n    )\n}\n\nfunction AddTodoItem(\n    {text, setText, onAddButtonClick}:\n        { text: string, setText: (text: string) => void, onAddButtonClick: () => void, }\n) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.todoItemContainer}>\n            <FullWidthTodoItemTextField\n                role={TEST_IDS.ADD_TODO_ITEM_TEXT_FIELD}\n\n                label=\"Add todo item\"\n                value={text}\n                onChange={event => setText(event.target.value)}\n            />\n            <IconButton role={TEST_IDS.ADD_TODO_ITEM_BUTTON} aria-label={TEST_IDS.ADD_TODO_ITEM_BUTTON}\n                        color=\"primary\"\n                        component=\"span\"\n                        onClick={onAddButtonClick}>\n                <AddCircle/>\n            </IconButton>\n        </div>\n    )\n}\n\nfunction FullWidthTodoItemTextField({testId, ...props}: { value: string, onChange: TextFieldProps['onChange'], testId?: string } & TextFieldProps) {\n    const classes = useStyles();\n\n    return (\n        <TextField\n            {...props}\n            variant=\"outlined\"\n            className={classes.flexOne}\n            inputProps={{'data-testid': testId || props.role}}\n        />\n    )\n}\n\nexport default TodoListApp;","export interface IdGenerator<T> {\n    getNextId(): T\n}\n\nexport function createIncrementalNumberIdGenerator(startFrom = 0): IdGenerator<number> {\n    const idGenerator = (function* generateId() {\n        let lastId = startFrom;\n        while (true) {\n            yield lastId++;\n        }\n    })();\n\n    return {\n        getNextId() {\n            return idGenerator.next().value;\n        }\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useMemo} from 'react';\nimport {Link as RouterLink, LinkProps as RouterLinkProps} from 'react-router-dom';\nimport Link, {LinkProps} from '@material-ui/core/Link';\nimport {Omit} from '@material-ui/types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport type StyledRouterLinkProps = { to: RouterLinkProps['to'], children: React.ReactNode, } & LinkProps;\n\nexport default function StyledRouterLink({to, children, ...linkProps}: StyledRouterLinkProps) {\n    return (\n        <Link component={RouterLink} to={to as any} {...linkProps}>\n            {children}\n        </Link>\n    );\n}\n\n\nexport interface ListItemLinkProps {\n    icon?: React.ReactElement;\n    primary: string;\n    to: string;\n}\n\nexport function ListItemLink(props: ListItemLinkProps) {\n    const {icon, primary, to} = props;\n\n    const renderLink = useMemo(\n        () =>\n            React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n                <RouterLink to={to} ref={ref} {...itemProps} />\n            )),\n        [to],\n    );\n\n    return (\n        <li>\n            <ListItem button component={renderLink}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                <ListItemText primary={primary} />\n            </ListItem>\n        </li>\n    );\n}\n\nexport function NoPropsForwardingLink({to, children, ...linkProps}: StyledRouterLinkProps) {\n    return (\n        <Link component={createLinkBehavior(to)} {...linkProps}>\n            {children}\n        </Link>\n    )\n}\n\nfunction createLinkBehavior(to: RouterLinkProps['to']) {\n    return React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((props, ref) => (\n        <RouterLink ref={ref} to={to} {...props} />\n    ))\n}","import React from 'react';\nimport List from \"@material-ui/core/List\";\n\nimport {ListItemLink, ListItemLinkProps} from \"./StyledRouterLink\";\n\nexport default function LinksMenuList({items}: { items: ListItemLinkProps[] }) {\n    return (\n        <List>\n            {items.map((item,) => (\n                <ListItemLink {...item} key={item.to} />\n            ))}\n        </List>\n    )\n}\n","import React from \"react\";\nimport {Route, Switch, useRouteMatch,} from \"react-router-dom\";\n\nimport PlainReactHookTodoApp from \"./PlainReactHookTodoApp\";\nimport LinksMenuList from \"../utils/LinksMenuList\";\n\nconst URL_PATHS = {\n    REACT_HOOKS: \"react-hooks\"\n}\n\nfunction TodoListAppMenu() {\n    const match = useRouteMatch();\n\n    return (\n        <nav>\n            <LinksMenuList\n                items={[\n                    {to: `${match.url}/${URL_PATHS.REACT_HOOKS}`, primary: \"With React Hooks\"}\n                ]}\n            />\n        </nav>\n    )\n}\n\nfunction TodoListApp() {\n    const match = useRouteMatch();\n\n    return (\n        <div>\n            {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path={match.path}>\n                    <h3>Please select an implementation.</h3>\n                </Route>\n                <Route path={`${match.path}/${URL_PATHS.REACT_HOOKS}`}>\n                    <PlainReactHookTodoApp />\n                </Route>\n                <Route path=\"*\">\n                    <div />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\n\nexport {\n    TodoListAppMenu,\n    TodoListApp,\n};","import React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport {IconButton} from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.modal + 1,\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        drawerContainer: {\n            overflow: 'auto',\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            overflow: \"auto\",\n        },\n\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n    }),\n);\n\nexport default function ClippedResponsiveDrawer(\n    {title, drawerContent, children}:\n        { title: string, drawerContent: React.ReactNode, children: React.ReactNode }\n) {\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div>\n            <Toolbar />\n            {drawerContent}\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n\n            <main className={classes.content}>\n                <Toolbar />\n                {children}\n            </main>\n        </div>\n    );\n}","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport LinksMenuList from \"./utils/LinksMenuList\";\nimport {ListItemLinkProps} from \"./utils/StyledRouterLink\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        subSection: {\n            color: theme.palette.primary.light\n        },\n        drawerContainer: {\n            overflow: 'auto',\n        },\n    }),\n);\n\nexport type AppNavigationBarProps = ListItemLinkProps & {\n    subSectionMenu?: React.ReactNode;\n};\n\nexport default function AppNavigationBar({items}: { items: AppNavigationBarProps[] }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.drawerContainer}>\n            <nav>\n                <LinksMenuList items={items} />\n\n                <Divider />\n\n                <div className={classes.subSection}>\n                    <Switch>\n                        {items.map(toSubSectionMenu)}\n                        <Route path=\"*\">\n                            <div />\n                        </Route>\n                    </Switch>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nfunction toSubSectionMenu({to, subSectionMenu}: AppNavigationBarProps) {\n    if (subSectionMenu) {\n        return (\n            <Route path={to} key={to}>\n                {subSectionMenu}\n            </Route>\n        );\n    } else {\n        return \"\";\n    }\n}","import {flatten, range, shuffle, sumBy, take} from \"lodash\";\nimport produce from \"immer\";\n\nimport {BoardData, BoardDimension, CellCoordinates} from \"./types\";\nimport {AppState, GameConfig, GameState, GameStatus} from \"./reactHooks/PlainReactHookMinesweeperApp\";\n\nexport type SimpleCoordinates = [number, number,];\nexport type SimpleCoordinatesList = SimpleCoordinates[];\n\nexport function buildBombCandidatesList(\n    {dimension: {width, height}, clicked: {row, col}}: { dimension: BoardDimension, clicked: CellCoordinates }\n): SimpleCoordinatesList { // TODO: think clearly about return type\n    // TODO: (minor for now) performance?\n    const allCombinations: SimpleCoordinates[] = flatten(\n        range(height).map(i =>\n            range(width).map(j =>\n                [i, j]\n            )\n        )\n    ) as any;\n    return allCombinations.filter(([i, j]) => (i !== row) || (j !== col));\n}\n\nexport function shuffleAndTakeList({candidates, takeCount}: { candidates: SimpleCoordinatesList, takeCount: number }): SimpleCoordinatesList {\n    return take(shuffle(candidates), takeCount);\n}\n\nexport function getBombsList({dimension, clicked, takeCount}: { dimension: BoardDimension, clicked: CellCoordinates, takeCount: number }): SimpleCoordinatesList {\n    const candidates = buildBombCandidatesList({dimension, clicked});\n    return shuffleAndTakeList({candidates, takeCount});\n}\n\nexport function blankBoardData({width, height}: BoardDimension): BoardData {\n    return range(height).map(_ =>\n        range(width).map(_ => ({\n            count: 0,\n            isBomb: false,\n            isOpen: false,\n        }))\n    )\n}\n\nconst FOUR_WAYS_NEIGHBOURS: SimpleCoordinatesList = [\n    [-1, 0],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n];\n\nconst EIGHT_WAYS_NEIGHBOURS: SimpleCoordinatesList = [\n    ...FOUR_WAYS_NEIGHBOURS,\n    [-1, -1],\n    [-1, 1],\n    [1, -1],\n    [1, 1],\n];\n\nexport function initializedBoardData(\n    {oldBoard, clicked, numBomb}: { oldBoard: BoardData, clicked: CellCoordinates, numBomb: number }\n): BoardData {\n    const dimension: BoardDimension = getDimension(oldBoard)\n\n    const bombCandidates = getBombsList({takeCount: numBomb, dimension, clicked});\n\n    return produce(oldBoard, newBoard => {\n        bombCandidates.forEach(([row, col]) => {\n            newBoard[row][col].isBomb = true;\n            addCountsToNeighbour();\n\n            // TODO: extract this to global function for testability\n            function addCountsToNeighbour() {\n                findValidNeighbours(EIGHT_WAYS_NEIGHBOURS, [row, col], dimension)\n                    .forEach(addCount)\n            }\n\n            function addCount([exactRow, exactCol]) {\n                newBoard[exactRow][exactCol].count++;\n            }\n        })\n\n    })\n}\n\nfunction findValidNeighbours(directions: SimpleCoordinatesList, [row, col]: SimpleCoordinates, dimension: BoardDimension): SimpleCoordinatesList {\n    return directions\n        .map(toExactCoordinates)\n        .filter(keepValidCoordinates);\n\n    function toExactCoordinates([drow, dcol]): SimpleCoordinates {\n        return [row + drow, col + dcol];\n    }\n\n    function keepValidCoordinates(coordinates) {\n        return isCoordinatesValid({coordinates, dimension});\n    }\n}\n\nexport function isCoordinatesValid(\n    {coordinates: [exactRow, exactCol], dimension: {width, height}}:\n        { coordinates: SimpleCoordinates, dimension: BoardDimension }\n): boolean {\n    const isRowValid = (exactRow >= 0) && (exactRow < height)\n    const isColValid = (exactCol >= 0) && (exactCol < width)\n\n    return isRowValid && isColValid;\n}\n\nfunction getDimension(boardData: BoardData): BoardDimension {\n    // TODO: add validation when `boardData` is empty\n    const firstRow = boardData[0];\n    return {\n        width: firstRow.length,\n        height: boardData.length\n    }\n}\n\nexport function checkIsPlaying(state: AppState): boolean {\n    return !!state.game && GameStatus.PLAYING === state.game.status;\n}\n\nexport function getNextGameState(prevState: GameState, clicked: CellCoordinates): GameState {\n    return produce(prevState, newState => {\n        const boardData = prevState.isInitialized\n            ? prevState.boardData\n            : initializedBoardData({\n                oldBoard: prevState.boardData,\n                numBomb: prevState.config.numBomb,\n                clicked,\n            });\n\n        newState.isInitialized = true;\n        newState.boardData = getNextBoard(boardData, clicked);\n        newState.status = getNextStatus(newState.boardData, clicked, prevState.config);\n    });\n}\n\nexport function getNextBoard(board: BoardData, {row, col}: CellCoordinates): BoardData {\n    return produce(board, newBoard => {\n        const clickedCell = newBoard[row][col];\n        clickedCell.isOpen = true;\n        if (!clickedCell.isBomb) {\n            flood()\n        }\n\n        function flood() {\n            const dimension = getDimension(board);\n            const visited: boolean[][] = range(dimension.height).map(_ => range(dimension.width).map(_ => false));\n            const queue: SimpleCoordinatesList = findValidNeighbours(FOUR_WAYS_NEIGHBOURS, [row, col], dimension);\n\n            while (queue.length > 0) {\n                const top: SimpleCoordinates = queue.shift() as any;\n                const origin = newBoard[top[0]][top[1]];\n                if (!origin.isBomb) {\n                    origin.isOpen = true;\n\n                    if (origin.count === 0) {\n                        findValidNeighbours(FOUR_WAYS_NEIGHBOURS, top, dimension)\n                            .filter(keepIfNotOpened)\n                            .filter(keepUnvisited)\n                            .forEach(addToQueue)\n                    }\n                }\n            }\n\n            function keepIfNotOpened([row, col]) {\n                return !newBoard[row][col].isOpen;\n            }\n\n            function keepUnvisited([row, col]) {\n                return !visited[row][col];\n            }\n\n            function addToQueue([row, col]) {\n                visited[row][col] = true;\n                queue.push([row, col]);\n            }\n        }\n    });\n}\n\nexport function countNumCellsOpened(board: BoardData) {\n    return sumBy(board, rowData => sumBy(rowData, c => c.isOpen ? 1 : 0));\n}\n\nexport function getNextStatus(board: BoardData, {row, col}: CellCoordinates, {width, height, numBomb}: GameConfig): GameStatus {\n    if (winAfterClick()) {\n        return GameStatus.WIN;\n    } else if (loseAfterClick()) {\n        return GameStatus.LOSE;\n    } else {\n        return GameStatus.PLAYING;\n    }\n\n    function winAfterClick() {\n        const totalNumCells = width * height;\n        const numCellsToOpen = totalNumCells - numBomb\n        // TODO: performance\n        const numCellsOpened = countNumCellsOpened(board);\n        return numCellsOpened === numCellsToOpen;\n    }\n\n    function loseAfterClick() {\n        return board[row][col].isBomb;\n    }\n}\n\nexport function createNewGameState(config: BoardDimension & { numBomb: number }) {\n    return {\n        status: GameStatus.PLAYING,\n        isInitialized: false,\n        boardData: blankBoardData(config),\n        config,\n    };\n}","import React, {useState} from \"react\";\nimport {BaseTextFieldProps} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport produce from \"immer\";\nimport {GameConfig} from \"./PlainReactHookMinesweeperApp\";\n\nfunction GameConfigDialog({isOpen, title, onStartGame}: { isOpen: boolean, title: string, onStartGame: (config: GameConfig) => void }) {\n    const [config, setConfig] = useState<GameConfig>({\n        width: 10,\n        height: 8,\n        numBomb: 10,\n    })\n\n    // TODO: add validation on game config (e.g. width, height must be positive, numBomb<width*height\n    const dialogTextFields = Object\n        .keys(config)\n        .map(field => (\n            <DialogTextField\n                key={field}\n                id={field}\n                label={field} // TODO: add string capitalize\n                value={config[field]}\n                setValue={setFormField(field as any)}\n            />\n        ));\n\n    return (\n        <Dialog open={isOpen} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n\n            <DialogContent>\n                <DialogContentText>Please set the game config</DialogContentText>\n\n                {dialogTextFields}\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={() => onStartGame(config)} color=\"primary\">\n                    Start Game\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n    function setFormField(field: keyof GameConfig) {\n        return value => setConfig(produce(config, newConfig => {\n            newConfig[field] = value\n        }));\n\n        // This also works and is slightly cleaner, but we would lose the type for `newConfig`\n        // return value => setConfig(produce(newConfig => {\n        //     newConfig[field] = value\n        // }));\n    }\n}\n\nfunction DialogTextField<T>({value, setValue, ...otherProps}: { value: T, setValue: (value: string) => void } & BaseTextFieldProps) {\n    return (\n        <TextField\n            variant=\"standard\"\n            margin=\"dense\"\n            value={value}\n            onChange={event => setValue(event.target.value)}\n            type=\"number\"\n            fullWidth\n            {...otherProps}\n        />\n    )\n}\n\nexport default GameConfigDialog;","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {BoardData, CellCoordinates, CellData} from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        boardContainer: {\n            display: \"block\",\n            width: \"max-content\",\n        },\n        cellButtonContainer: {\n            margin: theme.spacing(0.25),\n            display: \"inline-block\",\n        },\n        cellButton: {\n            height: theme.spacing(8),\n            width: theme.spacing(8),\n            minWidth: \"unset\",\n        }\n    }),\n);\n\nfunction BoardComponent(\n    {data, isPlaying, handleClick}:\n        { data: BoardData, isPlaying: boolean, handleClick: (coor: CellCoordinates) => void }\n) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.boardContainer}>\n            {data.map((rowData, row) => (\n                <div key={`row_${row}`}>\n                    {\n                        rowData.map((cellData, col) => (\n                            <div\n                                key={`cell_${row * rowData.length + col}`}\n                                className={classes.cellButtonContainer}\n                            >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    className={classes.cellButton}\n                                    children={getButtonText(cellData)}\n                                    disabled={cellData.isOpen || !isPlaying}\n                                    onClick={() => handleClick({row, col})}\n                                />\n                            </div>\n                        ))\n                    }\n                </div>\n            ))}\n        </div>\n    )\n}\n\nfunction getButtonText({isOpen, isBomb, count}: CellData): React.ReactNode {\n    if (isOpen) {\n        return isBomb ? \"B\" : count !== 0 ? count : \"\";\n    } else {\n        return \"\";\n    }\n}\n\nexport default BoardComponent;","import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport produce from \"immer\";\n\nimport {checkIsPlaying, createNewGameState, getNextGameState} from \"../utils\";\nimport {BoardData, BoardDimension, CellCoordinates} from \"../types\";\nimport GameConfigDialog from \"./GameConfigDialog\";\nimport BoardComponent from \"./BoardComponent\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        gameAppContainer: {\n            \"minHeight\": \"85vh\",\n            \"display\": \"flex\",\n            \"padding\": theme.spacing(8),\n            \"minWidth\": \"100%\",\n            \"justifyContent\": \"center\",\n            \"alignItems\": \"center\",\n            \"width\": \"max-content\",\n            \"height\": \"max-content\",\n            borderRadius: theme.spacing(1),\n            backgroundColor: theme.palette.background.paper,\n        },\n    }),\n);\n\nexport type GameConfig = BoardDimension & { numBomb: number; };\n\nexport enum GameStatus {\n    \"PLAYING\" = \"PLAYING\",\n    \"WIN\" = \"WIN\",\n    \"LOSE\" = \"LOSE\",\n}\n\nexport interface GameState {\n    config: GameConfig;\n    status: GameStatus;\n    isInitialized: boolean;\n    boardData: BoardData;\n}\n\nexport interface AppState {\n    game?: GameState\n}\n\nfunction PlainReactHookMinesweeperApp() {\n    const classes = useStyles();\n\n    const [state, setState] = useState<AppState>({})\n\n    const isPlaying = checkIsPlaying(state);\n    const gameBoardIfGameStarted = state.game\n        ? (\n            <BoardComponent\n                data={state.game.boardData}\n                isPlaying={isPlaying}\n                handleClick={handleClick}\n            />\n        )\n        : \"\"\n\n    const shouldShowDialog = !state.game || !isPlaying;\n    return (\n        <div className={classes.gameAppContainer}>\n            {gameBoardIfGameStarted}\n            <GameConfigDialog isOpen={shouldShowDialog} title={getTitle(state.game?.status)} onStartGame={startGame} />\n        </div>\n    );\n\n    function startGame(config: GameConfig) {\n        setState(produce(state, newState => {\n            newState.game = createNewGameState(config)\n        }))\n    }\n\n    function handleClick(coordinates: CellCoordinates) {\n        setState(produce(state, newState => {\n            if (state.game) {\n                newState.game = getNextGameState(state.game, coordinates);\n            }\n        }))\n    }\n}\n\nfunction getTitle(status?: GameStatus) {\n    if (status) {\n        if (status === GameStatus.WIN) {\n            return \"You win! Congratulations!\"\n        } else if (status === GameStatus.LOSE) {\n            return \"Unfortunately, you lose!\"\n        }\n    }\n    return \"Setup the game\";\n\n}\n\nexport default PlainReactHookMinesweeperApp;","import React from \"react\";\nimport {Route, Switch, useRouteMatch,} from \"react-router-dom\";\n\nimport LinksMenuList from \"../utils/LinksMenuList\";\nimport PlainReactHookMinesweeperApp from \"./reactHooks/PlainReactHookMinesweeperApp\";\n\nconst URL_PATHS = {\n    REACT_HOOKS: \"react-hooks\"\n}\n\nfunction MinesweeperAppMenu() {\n    const match = useRouteMatch();\n\n    return (\n        <nav>\n            <LinksMenuList\n                items={[\n                    {to: `${match.url}/${URL_PATHS.REACT_HOOKS}`, primary: \"With React Hooks\"}\n                ]}\n            />\n        </nav>\n    )\n}\n\nfunction MinesweeperApp() {\n    const match = useRouteMatch();\n\n    // A <Switch> looks through its children <Route>s and renders the first one that matches the current URL.\n    return (\n        <Switch>\n            <Route exact path={match.path}>\n                <h3>Please select an implementation.</h3>\n            </Route>\n            <Route path={`${match.path}/${URL_PATHS.REACT_HOOKS}`}>\n                <PlainReactHookMinesweeperApp />\n            </Route>\n            <Route path=\"*\">\n                <div />\n            </Route>\n        </Switch>\n    );\n}\n\n\nexport {\n    MinesweeperAppMenu,\n    MinesweeperApp,\n};","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport {Route, Switch, useRouteMatch} from \"react-router-dom\";\n\nimport {TodoListApp, TodoListAppMenu} from \"./todo/TodoListApp\";\nimport ClippedResponsiveDrawer from \"./ClippedResponsiveDrawer\";\nimport AppNavigationBar, {AppNavigationBarProps} from \"./AppNavigationBar\";\nimport {ListItemLinkProps} from \"./utils/StyledRouterLink\";\nimport {MinesweeperApp, MinesweeperAppMenu} from \"./minesweeper/MinesweeperApp\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appContainer: {},\n    }),\n);\n\ninterface AppConfiguration {\n    path: ListItemLinkProps['to'];\n    linkText: ListItemLinkProps['primary'];\n    appComponent: React.ReactNode;\n    subSectionMenu?: AppNavigationBarProps['subSectionMenu'];\n    title?: string;\n    isPathExact?: boolean;\n}\n\nconst APP_CONFIGURATIONS: AppConfiguration[] = [\n    {\n        path: \"/\",\n        linkText: \"Home\",\n        appComponent: (<h3>Please select an app.</h3>),\n        isPathExact: true,\n        title: \"spike-learn-mobx-rxjs\"\n    },\n    {\n        path: \"/todo-app\",\n        linkText: \"TodoApp\",\n        appComponent: (<TodoListApp />),\n        subSectionMenu: (<TodoListAppMenu />),\n        title: \"TODO APP\"\n    },\n    {\n        path: \"/minesweeper-app\",\n        linkText: \"MinesweeperApp\",\n        appComponent: (<MinesweeperApp />),\n        subSectionMenu: (<MinesweeperAppMenu />),\n        title: \"MINESWEEPER APP\"\n    },\n]\n\nconst App: React.FC = () => {\n    const classes = useStyles();\n    const match = useRouteMatch();\n\n    return (\n        <div className={classes.appContainer}>\n            <ClippedResponsiveDrawer\n                title={`${getTitle(match.url)}`}\n                drawerContent={<AppNavigationBar items={APP_CONFIGURATIONS.map(toNavigationItem)} />}\n            >\n                {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\n                <Switch>\n                    {APP_CONFIGURATIONS.map(toRoute)}\n                    <Route path=\"*\">\n                        <div />\n                    </Route>\n                </Switch>\n            </ClippedResponsiveDrawer>\n        </div>\n    );\n};\n\nfunction toNavigationItem({path, linkText, subSectionMenu}: AppConfiguration): AppNavigationBarProps {\n    return {\n        to: path,\n        primary: linkText,\n        subSectionMenu\n    };\n}\n\nfunction toRoute({appComponent, path, isPathExact}: AppConfiguration) {\n    return (\n        <Route exact={isPathExact} path={path} key={path}>\n            {appComponent}\n        </Route>\n    )\n}\n\n// TODO: extract to util.ts and add tests\nfunction getTitle(pathname: string): string {\n    const startIndex = pathname.indexOf(\"/\");\n    const endIndex = pathname.indexOf(\"/\", startIndex + 1);\n    const pathFirstPart = pathname.substring(startIndex, endIndex !== -1 ? endIndex : pathname.length);\n\n    const matchedConfig = APP_CONFIGURATIONS.find(({path}) => path === pathFirstPart);\n\n    return matchedConfig?.title ?? \"\";\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createMyMuiTheme} from \"./muiThemeFactory\";\n\nimport './index.css';\n\nconst myMuiTheme = createMyMuiTheme();\n\nReactDOM.render((\n    <ThemeProvider theme={myMuiTheme}>\n        <Router>\n            <Switch>\n                <Route path=\"*\">\n                    <App />\n                </Route>\n            </Switch>\n        </Router>\n    </ThemeProvider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\n\nexport function createMyMuiTheme() {\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n            primary: {main: \"#7986cb\"}\n        },\n    });\n\n    return responsiveFontSizes(theme);\n}"],"sourceRoot":""}